<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="tic.css">
    <title>Document</title>
    <style>
        
        *{
    margin: 0;
    padding: 0;
}

body{
    background-color: rgb(54, 49, 49);
    text-align: center;
}

.btn1{
    color:red;
    box-shadow: inset 2px 2px 11px rgb(9, 3, 201);
    height: 80px;
    width: 80px;
    font-size:33px;
    background-color: rgb(31, 28, 28);
    border-color: rgb(255, 255, 255);
    filter:drop-shadow(5px 4px 8px rgb(0, 17, 201));

    }

.btn{
    color:rgb(255, 255, 255);
    /*box-shadow: inset 2px 2px 11px rgb(9, 3, 201);*/
    height: 120px;
    width: 120px;
    font-size:33px;
    background-color: rgb(22, 20, 28);
    border-color: rgb(255, 255, 255);
    filter:drop-shadow(4px 3px 10px rgb(33, 0, 201));
    border: solid 3px;
    box-shadow: 0px 0px 1px rgb(72, 0, 255),
     0px 0px 2px rgb(38, 0, 255),
     0px 0px 5px rgb(8, 0, 255),
     0px 0px 10px rgb(76, 0, 255);
    }

    .btn.X{
        color: red;
    }

    .btn.O{
        color:blue;
    }

    .btn.winner{
        color:rgb(255, 255, 255);
       filter: blur(2.5px);
       height: 120px;
       
    }

.container{
    height: 100vh;
    width: 55vh;
    border: solid black 5px;
}

.game{
    position: absolute;
    left: 600px;
    bottom: 130px;
    height:70vh;
    width:75vmin;
    display: flex;
    flex-wrap: wrap;
    row-gap: 27px;
    column-gap: 28px;
}

.reset{
    position:absolute;
    height:45px;
    width:110px;
    bottom:78px;
    left:750px;
    background-color: rgb(235, 22, 22);
    border-radius: 20px;
    font-family: cursive;
    font-size: 27px;
}

.result{
    position:absolute;
    background-color: rgba(130, 252, 0, 0);
    color: rgb(255, 255, 255);
    text-decoration: 2px 2px 50px blue ;
    height: 30px;
    width: 220px;
    bottom:18px ;
    left: 200px;
    font-weight: bold;
    font-size: 45px;
    animation: animat 10s linear  infinite;
}

@keyframes animat{
    to{
        transform: translate(1145px);
    }
    from{
        transform: translate(-1000px);
    }
}
        
    </style>
</head>
<body>
    <container class="container">
        <div class="game">
    <button class="btn" id="clk"></button>
    <button class="btn"></button>
    <button class="btn"></button>
    <button class="btn"></button>
    <button class="btn"></button>
    <button class="btn"></button>
    <button class="btn"></button>
    <button class="btn"></button>
    <button class="btn"></button>
        </div>
    </container>
    <button class="reset" id="reset" onclick="reset()">Reset</button>
    <div id="result" class="result"></div>   
</body>
<script>
    let turn=true;

    let winPatterns=[
     [0,1,2],
     [3,4,5],
     [6,7,8],
     [0,3,6],
     [1,4,7],
     [2,5,8],
     [0,4,8],
     [2,4,6],
    ];

    let result=document.getElementById("result");
    let boxes=document.querySelectorAll('.btn');
    boxes.forEach(button => {
        button.addEventListener("click",gameBtn)
    });

     function gameBtn(event)
     {
      const button=event.target;
      if(button.innerText===""){
      if(turn){
        button.style.color="red"
        button.innerText="X";
        turn=false;
      }
      else{
        button.innerText="O";
          button.style.color="blue"
        turn=true;
      }
      checkWinner();
    }
      }
      
      function reset() {
        boxes.forEach(button=>{
            if(button.innerText!=""){
                button.innerText="";
                button.style.color="white"
                result.innerText="";
                button.classList.remove("winner");  
        }
        button.disabled=false;
        turn=true
        })
    }

function highlight(pattern){ 
    boxes[pattern[0]].classList.add("winner");
    boxes[pattern[1]].classList.add("winner");
    boxes[pattern[2]].classList.add("winner");
}

function highlightRemover(pattern){ 
    boxes[pattern[0]].classList.remove("winner");
    boxes[pattern[1]].classList.remove("winner");
    boxes[pattern[2]].classList.remove("winner");
}

      function checkWinner()
      {
            for (let pattern of winPatterns){
        let posVal1=boxes[pattern[0]].innerText;
        let posVal2=boxes[pattern[1]].innerText;
        let posVal3=boxes[pattern[2]].innerText;
           if(posVal1!="" && posVal1===posVal2 && posVal2===posVal3)
        {
            console.log("winner");
            result.innerText=`${posVal1} win!`;
            boxesDisabled();
            highlight(pattern);
        }

        
        let allField=Array.from(boxes).every(button=>{
           return button.innerText!=="";
        });
        if(allField){
            result.innerText="DRAW";
        }
           }
          
        }

function boxesDisabled(){
boxes.forEach(button=>{
    button.disabled=true;
});
}
</script>

</html>
